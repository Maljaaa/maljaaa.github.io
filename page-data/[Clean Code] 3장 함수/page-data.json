{"componentChunkName":"component---src-templates-blog-template-js","path":"/[Clean Code] 3장 함수/","result":{"data":{"cur":{"id":"7338da3f-242d-511b-bb5a-c64a2bbe6112","html":"<h2 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h2>\n<p>추상화 수준이 너무 다양하고 코드가 길다.<br>\n두 겹으로 중첩된 if문은 이상한 플래그를 확인하고, 이상한 문자열을 사용하며, 이상한 함수를 호출한다.<br>\n코드를 이해하기가 어렵다.<br>\n하지만 매서드 몇 개를 추출하고, 이름 몇 개를 변경하고, 구조를 조금 변경하면 파악하기 어려웠던 정보가 쉽게 드러난다.</p>\n<h3 id=\"작게-만들어라\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EA%B2%8C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%9D%BC\" aria-label=\"작게 만들어라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>작게 만들어라</h3>\n<p>100줄 ~ 300줄 함수도 있고 20줄 ~ 30줄 함수도 있다.<br>\n최대한 작으면 작을 수록 좋다.<br>\n심지어 2줄 ~ 4줄인 함수도 있다.<br>\n줄일 수 있다면 줄이는게 좋다.</p>\n<ul>\n<li>블록과 들여쓰기\n<ul>\n<li>if문 / else문 / while 문 등에 들어가는 블록은 한 줄이어야 한다. -> 대개 여기서 함수를 호출한다</li>\n<li>함수에서 들여쓰기 수준은 1단이나 2단을 넘어서면 안 된다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"한-가지만-해라\" style=\"position:relative;\"><a href=\"#%ED%95%9C-%EA%B0%80%EC%A7%80%EB%A7%8C-%ED%95%B4%EB%9D%BC\" aria-label=\"한 가지만 해라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한 가지만 해라!</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"함수는 한 가지를 해야 한다. 그 한 가지를 잘 해야 한다. 그 한 가지만을 해야 한다.\"</code></pre></div>\n<p>우리가 함수를 만드는 이유는 큰 개념을 다음 추상화 수준에서 여러 단계로 나눠 수행하기 위해서이다.<br>\n그렇기 때문에 단순히 다른 표현이 아니라 의미 있는 이름으로 <strong>다른 함수</strong>를 추출할 수 있다면,<br>\n그 함수는 <strong>여러 작업</strong>을 하는 셈이다.</p>\n<h3 id=\"함수당-추상화-수준은-하나로\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%EB%8B%B9-%EC%B6%94%EC%83%81%ED%99%94-%EC%88%98%EC%A4%80%EC%9D%80-%ED%95%98%EB%82%98%EB%A1%9C\" aria-label=\"함수당 추상화 수준은 하나로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수당 추상화 수준은 하나로!</h3>\n<p>함수가 확실히 ‘한 가지’ 작업만 하려면 함수 내 모든 문장의 추상화 수준이 동일해야 한다.</p>\n<ul>\n<li>위에서 아래로 코드 읽기 : <strong>내려가기</strong> 규칙\n<ul>\n<li>위에서 아래로 프로그램을 읽으면 함수 추상화 수준이 한 번에 한 단계씩 낮아진다.</li>\n</ul>\n</li>\n</ul>\n<p>추상화 수준이 하나인 함수를 구현하는게 쉽지 않겠지만 매우 중요한 규칙이다.</p>\n<h3 id=\"switch문\" style=\"position:relative;\"><a href=\"#switch%EB%AC%B8\" aria-label=\"switch문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Switch문</h3>\n<p>5가지 문제가 있다.</p>\n<ol>\n<li>함수가 길다.</li>\n<li>‘한 가지’ 작업만 수행하지 않는다.</li>\n<li>SRP(Single Responsibility Principle) - 코드를 변경할 이유가 여럿이기 때문</li>\n<li>OCP(Open Closed Principle) - 새 직원을 추가할 때마다 코드를 변경하기 때문</li>\n<li>구조가 동일한 함수가 무한정 존재</li>\n</ol>\n<p><strong>[ 해결 방법 ]</strong></p>\n<p>다형성을 이용하여 switch문을 저차원 클래스에 숨기고 절대로 반복하지 않는 방법이 있다.<br>\nswitch문을 추상 팩토리에 숨기고, 팩토리는 switch문을 사용해 적절한 파생 클래스의 인스턴스를 생성한다.<br>\n다른 함수들은 인터페이스를 거쳐서 호출된다.<br>\n그러면 다형성으로 인해 실제 파생 클래스의 함수가 실행된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isPayday</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token class-name\">Money</span> <span class=\"token function\">calculatePay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deliverPay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Money</span> pay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">EmployeeFactory</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Employee</span> <span class=\"token function\">makeEmployee</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EmployeeRecord</span> r<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InvalidEmployeeType</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EmployeeFactoryImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">EmployeeFactory</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Employee</span> <span class=\"token function\">makeEmployee</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EmployeeRecord</span> r<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InvalidEmployeeType</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">case</span> <span class=\"token constant\">COMMISIONED</span><span class=\"token operator\">:</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CommisionedEmployee</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">case</span> <span class=\"token constant\">HOURLY</span><span class=\"token operator\">:</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HourlyEmployee</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">case</span> <span class=\"token constant\">SALARIED</span><span class=\"token operator\">:</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SalariedEmployee</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\r\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvalidEmployeeType</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"서술적인-이름을-사용하라\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EC%88%A0%EC%A0%81%EC%9D%B8-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"서술적인 이름을 사용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서술적인 이름을 사용하라!</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"코드를 읽으면서 짐작했던 기능을 각 루틴이 그대로 수행한다면 깨끗한 코드라 불러도 되겠다.\"</code></pre></div>\n<p>이름이 길어도 괜찮다.<br>\n길고 서술적인 이름이 짧고 어려운 이름보다 좋다.<br>\n길고 서술적인 이름이 길고 서술적인 주석보다 좋다.</p>\n<h3 id=\"함수-인수\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%9D%B8%EC%88%98\" aria-label=\"함수 인수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 인수</h3>\n<p>😊 0개 -------------------------------- 4개 이상 😞<br>\n인수가 있으면 함수 이름과 인수 사이에 추상화 수준이 다르기 때문에<br>\n코드를 읽는 사람이 이해하기 어렵다.</p>\n<ul>\n<li>많이 쓰는 단항 형식\n<ul>\n<li>인수에 질문을 던지는 경우(boolean fileExists(“MyFile”))</li>\n<li>인수를 뭔가로 변환해 결과를 반환하는 경우(InputStream fileOpen(“MyFile”))</li>\n</ul>\n</li>\n<li>플래그 인수\n<ul>\n<li>함수로 부울 값을 넘기는 관례는 정말 끔찍하다.</li>\n</ul>\n</li>\n<li>이항 함수\n<ul>\n<li>인수가 1개인 함수보다 이해하기 어렵다.</li>\n<li>Point p = new Point(0, 0); 이런 경우엔 적절하다.</li>\n</ul>\n</li>\n<li>삼항 함수\n<ul>\n<li>인수가 2개인 함수보다 이해하기 어렵다.</li>\n<li>매번 함수를 볼 때마다 주춤해진다.</li>\n</ul>\n</li>\n<li>인수 객체\n<ul>\n<li>객체를 생성해 인수를 줄이는 방법 (Circle makeCircle(double x, double y, double radius) &#x26;&#x26; Circle makeCircle(Point center, double radius))</li>\n</ul>\n</li>\n<li>인수 목록\n<ul>\n<li>인수 개수가 가변적인 함수도 필요하다.</li>\n<li>String.format(“%s worked %.2f hours.”, name, hours);</li>\n</ul>\n</li>\n<li>동사와 키워드\n<ul>\n<li>함수의 의도나 인수의 순서와 의도를 제대로 표현하려면 좋은 함수 이름은 필수.</li>\n<li>인수가 동사/명사 쌍을 이뤄야 한다.</li>\n<li>함수 이름에 키워드를 추가하는 방법도 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"부수-효과를-일으키지-마라\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EC%88%98-%ED%9A%A8%EA%B3%BC%EB%A5%BC-%EC%9D%BC%EC%9C%BC%ED%82%A4%EC%A7%80-%EB%A7%88%EB%9D%BC\" aria-label=\"부수 효과를 일으키지 마라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부수 효과를 일으키지 마라!</h3>\n<p>부수 효과는 거짓말이다.<br>\n시간적인 결합(temporal coupling) 이나 순서 종속성(order dependency)을 초래한다.</p>\n<p><code class=\"language-text\">public boolean checkPassword(String userName, String password){}</code>이라는 함수가 있다.<br>\n함수 이름만 봐서는 암호를 확인하는 함수다.<br>\n하지만 Session.initialize() 호출이 있다.<br>\n이름만 봐서는 세션을 초기화한다는 사실이 드러나지 않는다.</p>\n<ul>\n<li>출력 인수<br>\n<code class=\"language-text\">appendFooter(s);</code><br>\n이 함수에서 인수 s는 입력일까 출력일까?<br>\n함수 선언부를 찾아보면 분명해진다.<br>\n<code class=\"language-text\">public void appendFooter(StringBuffer report)</code><br>\n인수 s는 출력 인수지만, 이렇게 찾아보는 것은 인지적으로 거슬린다는 것이기에 피해야한다.<br>\n<code class=\"language-text\">report.appendFooter()</code><br>\n출력 인수로 사용하라고 설계한 <code class=\"language-text\">this</code>를 활용하여 이렇게 작성하도록 하자.</li>\n</ul>\n<h3 id=\"명령과-조회를-분리하라\" style=\"position:relative;\"><a href=\"#%EB%AA%85%EB%A0%B9%EA%B3%BC-%EC%A1%B0%ED%9A%8C%EB%A5%BC-%EB%B6%84%EB%A6%AC%ED%95%98%EB%9D%BC\" aria-label=\"명령과 조회를 분리하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>명령과 조회를 분리하라!</h3>\n<p>함수는 뭔가를 수행하거나 뭔가에 답하거나 둘 중 <strong>하나</strong>만 해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> attribute<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> value<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이 함수를</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"unclebob\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>이렇게 사용하면 어색하다.<br>\nset이 00속성이 ㅁㅁ으로 설정되어 있다면…으로 읽힌다.<br>\n명령과 조회를 분리해 혼란을 뿌리뽑자.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">attributeExists</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"unclebob\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"오류-코드보다-예외를-사용하라\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%A5%98-%EC%BD%94%EB%93%9C%EB%B3%B4%EB%8B%A4-%EC%98%88%EC%99%B8%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"오류 코드보다 예외를 사용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오류 코드보다 예외를 사용하라!</h3>\n<p>오류 코드를 반환하면 호출자는 곧바로 처리해야한다.<br>\nif문을 엄청 쓰게 되는 것이다.<br>\n하지만 예외 처리를 해주면 try-catch로 코드가 깔끔해진다.</p>\n<ul>\n<li>Try/Catch 블록 뽑아내기</li>\n</ul>\n<p>try-catch 블록은 원래 추하다.<br>\n블록을 별도 함수로 뽑아내는 편이 좋다.</p>\n<ul>\n<li>오류 처리도 한 가지 작업이다.</li>\n</ul>\n<p>함수에 키워드 try가 있다면 함수는 try문으로 시작해 catch/finally문으로 끝나야 한다.</p>\n<ul>\n<li>Error.java 의존성 자석</li>\n</ul>\n<p>오류 코드를 반환한다는 것은 오류코드를 어딘가에 정의해둔다는 것이다.<br>\n오류 코드 대신 예외를 사용하면 새 예외는 Exceptoin 클래스에서 파생된다.<br>\n따라서 재컴파일/재배치 없이도 새 예외 클래스를 추가할 수 있다.</p>\n<h3 id=\"반복하지-마라\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EB%B3%B5%ED%95%98%EC%A7%80-%EB%A7%88%EB%9D%BC\" aria-label=\"반복하지 마라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반복하지 마라!</h3>\n<p>중복은 소프트웨어에서 모든 악의 근원이다.<br>\n구조적 프로그래밍, AOP, COP 등 모두 어떤 면에서는 중복 제거 전략이다.<br>\ninclude를 활용하여 제거하는 방법도 있다.</p>\n<h3 id=\"구조적-프로그래밍\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%A1%B0%EC%A0%81-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"구조적 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구조적 프로그래밍</h3>\n<p>함수 내의 모든 블록에 입구와 출구는 하나만 존재해야 한다.<br>\n<strong>goto</strong>는 절대로!! 안 된다.\r\n함수가 작을 때 간혹 return, break, continue는 괜찮다.</p>\n<h3 id=\"함수를-어떻게-짜죠\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%EB%A5%BC-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A7%9C%EC%A3%A0\" aria-label=\"함수를 어떻게 짜죠 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수를 어떻게 짜죠?</h3>\n<ol>\n<li>초안을 짠다.</li>\n<li>코드를 다듬는다.</li>\n<li>함수를 만든다.</li>\n<li>이름을 바꾼다.</li>\n<li>중복을 제거한다.</li>\n<li>메서드를 줄이고 순서를 바꾼다.</li>\n</ol>\n<blockquote>\n<p>이 와중에도 코드는 항상 단위 테스트를 통과한다.</p>\n</blockquote>\n<h3 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"내가 작성하는 함수가 분명하고 정확한 언어로 깔끔하게 같이 맞아떨어져야 \r\n이야기를 풀어가긱가 쉬워진다는 사실을 기억하자.</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#intro\">Intro</a></p>\n<ul>\n<li><a href=\"#%EC%9E%91%EA%B2%8C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%9D%BC\">작게 만들어라</a></li>\n<li><a href=\"#%ED%95%9C-%EA%B0%80%EC%A7%80%EB%A7%8C-%ED%95%B4%EB%9D%BC\">한 가지만 해라!</a></li>\n<li><a href=\"#%ED%95%A8%EC%88%98%EB%8B%B9-%EC%B6%94%EC%83%81%ED%99%94-%EC%88%98%EC%A4%80%EC%9D%80-%ED%95%98%EB%82%98%EB%A1%9C\">함수당 추상화 수준은 하나로!</a></li>\n<li><a href=\"#switch%EB%AC%B8\">Switch문</a></li>\n<li><a href=\"#%EC%84%9C%EC%88%A0%EC%A0%81%EC%9D%B8-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\">서술적인 이름을 사용하라!</a></li>\n<li><a href=\"#%ED%95%A8%EC%88%98-%EC%9D%B8%EC%88%98\">함수 인수</a></li>\n<li><a href=\"#%EB%B6%80%EC%88%98-%ED%9A%A8%EA%B3%BC%EB%A5%BC-%EC%9D%BC%EC%9C%BC%ED%82%A4%EC%A7%80-%EB%A7%88%EB%9D%BC\">부수 효과를 일으키지 마라!</a></li>\n<li><a href=\"#%EB%AA%85%EB%A0%B9%EA%B3%BC-%EC%A1%B0%ED%9A%8C%EB%A5%BC-%EB%B6%84%EB%A6%AC%ED%95%98%EB%9D%BC\">명령과 조회를 분리하라!</a></li>\n<li><a href=\"#%EC%98%A4%EB%A5%98-%EC%BD%94%EB%93%9C%EB%B3%B4%EB%8B%A4-%EC%98%88%EC%99%B8%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\">오류 코드보다 예외를 사용하라!</a></li>\n<li><a href=\"#%EB%B0%98%EB%B3%B5%ED%95%98%EC%A7%80-%EB%A7%88%EB%9D%BC\">반복하지 마라!</a></li>\n<li><a href=\"#%EA%B5%AC%EC%A1%B0%EC%A0%81-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\">구조적 프로그래밍</a></li>\n<li><a href=\"#%ED%95%A8%EC%88%98%EB%A5%BC-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A7%9C%EC%A3%A0\">함수를 어떻게 짜죠?</a></li>\n<li><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"Intro 추상화 수준이 너무 다양하고 코드가 길다. 두 겹으로 중첩된 if문은 이상한 플래그를 확인하고, 이상한 문자열을 사용하며, 이상한 함수를 호출한다. 코드를 이해하기가 어렵다. 하지만 매서드 몇 개를 추출하고, 이름 몇 개를 변경하고, 구조를 조금 변경하면 파악하기 어려웠던 정보가 쉽게 드러난다. 작게 만들어라 100줄 ~ 300줄 함수도 있고 20줄 ~ 30줄 함수도 있다. 최대한 작으면 작을 수록 좋다. 심지어 2줄 ~ 4줄인 함수도 있다. 줄일 수 있다면 줄이는게 좋다. 블록과 들여쓰기 if문 / else문 / while 문 등에 들어가는 블록은 한 줄이어야 한다. -> 대개 여기서 함수를 호출한다 함수에서 들여쓰기 수준은 1단이나 2단을 넘어서면 안 된다. 한 가지만 해라! 우리가 함수를 만드는 이유는 큰 개념을 다음 추상화 수준에서 여러 단계로 나눠 수행하기 위해서이다. 그렇기 때문에 단순히 다른 표현이 아니라 의미 있는 이름으로 다른 함수를 추출할 수 있다면, …","frontmatter":{"date":"August 30, 2024","title":"3장 함수","categories":"Clean_Code","author":"신승민","emoji":"🍫"},"fields":{"slug":"/[Clean Code] 3장 함수/"}},"next":{"id":"ad644289-7809-51c4-a31d-49de2becd758","html":"<h2 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h2>\n<p>나는 평소에 네이밍을 하는데 어려움이 있었다. 여러 컨벤션들이 있었지만, 내가 옆에 두고 하지 않는 이상 좋은 네이밍을 하기엔 어려웠다. 아직은 경험이 없고 익숙하지 않아서 일까?… 그래서 더더욱 이번 챕터를 재미있게 봤다.</p>\n<h3 id=\"의도를-분명히-밝혀라\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EB%8F%84%EB%A5%BC-%EB%B6%84%EB%AA%85%ED%9E%88-%EB%B0%9D%ED%98%80%EB%9D%BC\" aria-label=\"의도를 분명히 밝혀라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의도를 분명히 밝혀라</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"의도가 분명하게 이름을 지으라\"</code></pre></div>\n<p>따로 주석이 필요하다면 의도를 분명히 드러내지 못했다는 말이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> d<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 경과 시간(단위: 날짜)</span></code></pre></div>\n<p>여기서 d는 아무 의미도 드러나지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> elapsedTimeInDays<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">int</span> daysSinceCreation<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">int</span> daysSinceModification<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">int</span> fileAgeInDays<span class=\"token punctuation\">;</span></code></pre></div>\n<p>의도가 드러나는 이름을 사용하면 코드 이해와 변경이 쉬워진다. 그러면서도 영어 동사의 표현을 잘 알아야겠다는 생각이 든다.<br>\n다음 코드가 무엇을 하는지 살펴보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getThem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> list1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> x <span class=\"token operator\">:</span> theList<span class=\"token punctuation\">)</span> \r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\r\n            list1<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> list1<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>복잡한 문장은 없다. 공백과 들여쓰기도 적당하다. 변수는 세개, 상수는 두 개뿐이다.<br>\n문제는 코드의 <strong>단순성</strong>이 아니라 코드의 <strong>함축성</strong>이다.<br>\n즉, 코드 맥락이 코드 자체에 명시적으로 드러나지 않는다.</p>\n<ul>\n<li>theList에 무엇이 들었는가?</li>\n<li>theList에서 0번째 값이 어째서 중요한가?</li>\n<li>값 4는 무슨 의미인가?</li>\n<li>함수가 반환하는 리스트 list1을 어떻게 사용하는가?</li>\n</ul>\n<p>그렇다면 지뢰찾기 게임이라고 가정해보고 바꿔보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token function\">getFlaggedCells</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> flaggedCells <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> cell <span class=\"token operator\">:</span> gameBoard<span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">[</span><span class=\"token constant\">STATUS_VALUE</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token constant\">FLAGGED</span><span class=\"token punctuation\">)</span>\r\n            flaggedCells<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> flaggedCells<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 작성하니 이해하기 더 수월하다.<br>\n더 나아가, int 배열 대신 클래스를 사용하고, 상수 대신 isFlagged()라는 함수를 사용해 개선해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token function\">getFlaggedCells</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">></span></span> flaggedCells <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Cell</span> cell <span class=\"token operator\">:</span> gameBoard<span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">.</span><span class=\"token function\">isFlagged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n            flaggedCells<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> flaggedCells<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"그릇된-정보를-피하라\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A6%87%EB%90%9C-%EC%A0%95%EB%B3%B4%EB%A5%BC-%ED%94%BC%ED%95%98%EB%9D%BC\" aria-label=\"그릇된 정보를 피하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그릇된 정보를 피하라</h3>\n<ul>\n<li>다른 플랫폼에서 사용하는 코드를 변수이름으로 하지 말아라.</li>\n<li>리스트를 000List라 명명하지 말고 000s로 명명해라.</li>\n<li>서로 흡사한 이름을 사용하지 않도록 주의하라.</li>\n<li>l은 1과 혼동되고, O는 0과 혼동되므로 주의하라.</li>\n</ul>\n<h3 id=\"의미-있게-구분하라\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EB%AF%B8-%EC%9E%88%EA%B2%8C-%EA%B5%AC%EB%B6%84%ED%95%98%EB%9D%BC\" aria-label=\"의미 있게 구분하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의미 있게 구분하라</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">명확한 관례가 없다면 변수 moneyAmount는 money와 구분이 안 된다.  \r\ncustomerInfo는 customer와, accountData는 account와, theMessage는 message와 구분이 안 된다.  \r\n읽는 사람이 차이를 알도록 이름을 지어라.</code></pre></div>\n<h3 id=\"발음하기-쉬운-이름을-사용하라\" style=\"position:relative;\"><a href=\"#%EB%B0%9C%EC%9D%8C%ED%95%98%EA%B8%B0-%EC%89%AC%EC%9A%B4-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"발음하기 쉬운 이름을 사용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>발음하기 쉬운 이름을 사용하라</h3>\n<p>다른 개발자와 소통할 때 변수를 이야기하는 상황이 오게 되는데,<br>\n이때 지적인 대화가 가능해진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">마이키, 이 레코드 좀 보세요. 'Generation Timestamp' 값이 내일 날짜입니다!</code></pre></div>\n<blockquote>\n<p>나는 이 부분을 많이 반성한다…</p>\n</blockquote>\n<h3 id=\"검색하기-쉬운-이름을-사용하라\" style=\"position:relative;\"><a href=\"#%EA%B2%80%EC%83%89%ED%95%98%EA%B8%B0-%EC%89%AC%EC%9A%B4-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"검색하기 쉬운 이름을 사용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>검색하기 쉬운 이름을 사용하라</h3>\n<p>문자 하나를 사용하는 이름과 상수는 쉽게 눈에 띄지 않는다.<br>\n그래서 저자와 마찬가지로 나는 간단한 메서드에서 로컬 변수만 한 문자를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"이름 길이는 범위 크기에 비례해야 한다.\"</code></pre></div>\n<p>변수나 상수를 코드 여러 곳에서 사용한다면 검색하기 쉬운 이름이어야 한다.</p>\n<h3 id=\"인코딩을-피하라\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EC%BD%94%EB%94%A9%EC%9D%84-%ED%94%BC%ED%95%98%EB%9D%BC\" aria-label=\"인코딩을 피하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인코딩을 피하라</h3>\n<p>유형이나 범위 정보까지 인코딩에 넣으면 이름을 해독하기 어려워진다.</p>\n<ul>\n<li>헝가리식 표기법 : 변수 및 함수의 인자 이름 앞에 데이터 타입을 명시하는 코딩 규칙</li>\n<li>멤버 변수 접두어 : 예를 들어 멤버 변수에 m_이라는 접두어</li>\n<li>인터페이스 클래스와 구현 클래스 : <strong>구현 클래스</strong>에 인코딩( ex) ShapeFactoryImp )</li>\n</ul>\n<h3 id=\"자신의-기억력을-자랑하지-마라\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EC%8B%A0%EC%9D%98-%EA%B8%B0%EC%96%B5%EB%A0%A5%EC%9D%84-%EC%9E%90%EB%9E%91%ED%95%98%EC%A7%80-%EB%A7%88%EB%9D%BC\" aria-label=\"자신의 기억력을 자랑하지 마라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자신의 기억력을 자랑하지 마라</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">똑똑한 프로그래머와 전문가 프로그래머 사이에서 나타나는 차이점 하나만 들자면, 전문가 프로그래머는 명료함이 최고라는 사실을 이해한다.</code></pre></div>\n<h3 id=\"클래스-이름\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%9D%B4%EB%A6%84\" aria-label=\"클래스 이름 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 이름</h3>\n<p>명사나 명사구가 적합하다.<br>\nManager, Processor, Data, Info 등과 같은 단어는 피하고, 동사는 사용하지 않는다.</p>\n<h3 id=\"매서드-이름\" style=\"position:relative;\"><a href=\"#%EB%A7%A4%EC%84%9C%EB%93%9C-%EC%9D%B4%EB%A6%84\" aria-label=\"매서드 이름 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>매서드 이름</h3>\n<p>동사나 동사구가 적합하다.<br>\n접근자 - get, 변경자 - set, 조건자 - is<br>\n생성자를 중복정의할 때는 정적 팩토리 매서드를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Complex</span> fulcrumPoint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Complex</span>\r\n보다\r\n<span class=\"token class-name\">Complex</span> fulcrumPoint <span class=\"token operator\">=</span> <span class=\"token class-name\">Complex<span class=\"token punctuation\">.</span>FromRealNumber</span><span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n가 좋다<span class=\"token punctuation\">.</span></code></pre></div>\n<p>생성자 사용을 제한하려면 해당 생성자를 private로 선언한다.</p>\n<h3 id=\"기발한-이름은-피하라\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B0%9C%ED%95%9C-%EC%9D%B4%EB%A6%84%EC%9D%80-%ED%94%BC%ED%95%98%EB%9D%BC\" aria-label=\"기발한 이름은 피하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기발한 이름은 피하라</h3>\n<p>재미난 이름보다 명료한 이름을 선택하라.<br>\n농담은 피하고, 의도를 분명하고 솔직하게 표현하자.</p>\n<h3 id=\"한-개념에-한-단어를-사용하라\" style=\"position:relative;\"><a href=\"#%ED%95%9C-%EA%B0%9C%EB%85%90%EC%97%90-%ED%95%9C-%EB%8B%A8%EC%96%B4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"한 개념에 한 단어를 사용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한 개념에 한 단어를 사용하라</h3>\n<p>똑같은 매서드를 클래스마다 fetch, retrieve, get으로 제각각 부르면 혼란스럽다.<br>\n근본적으로 다르다고 생각되지 않는 것들을 통일하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"일관성 있는 어휘는 코드를 사용할 프로그래머가 반갑게 여길 선물이다.\"</code></pre></div>\n<h3 id=\"말장난을-하지-마라\" style=\"position:relative;\"><a href=\"#%EB%A7%90%EC%9E%A5%EB%82%9C%EC%9D%84-%ED%95%98%EC%A7%80-%EB%A7%88%EB%9D%BC\" aria-label=\"말장난을 하지 마라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>말장난을 하지 마라</h3>\n<p>기존 값 두 개를 더하는 개념으로 add를 사용하고 있었다가, 하나를 추가하는 개념으로 add를 사용한다면 이는 말장난이다.<br>\ninset나 append라는 이름이 적당하다.</p>\n<h3 id=\"해법-영역에서-가져온-이름을-사용하라\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EB%B2%95-%EC%98%81%EC%97%AD%EC%97%90%EC%84%9C-%EA%B0%80%EC%A0%B8%EC%98%A8-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"해법 영역에서 가져온 이름을 사용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해법 영역에서 가져온 이름을 사용하라</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">프로그래머에게 익숙한 기술 개념은 아주 많다.  \r\n기술 개념에는 기술 이름이 가장 적합한 선택이다.  </code></pre></div>\n<h3 id=\"문제-영역에서-가져온-이름을-사용하라\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%98%81%EC%97%AD%EC%97%90%EC%84%9C-%EA%B0%80%EC%A0%B8%EC%98%A8-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"문제 영역에서 가져온 이름을 사용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 영역에서 가져온 이름을 사용하라</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">적절한 '프로그래머 용어'가 없다면 문제 영역에서 이름을 가져온다.</code></pre></div>\n<h3 id=\"의미-있는-맥락을-추가하라\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EB%AF%B8-%EC%9E%88%EB%8A%94-%EB%A7%A5%EB%9D%BD%EC%9D%84-%EC%B6%94%EA%B0%80%ED%95%98%EB%9D%BC\" aria-label=\"의미 있는 맥락을 추가하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의미 있는 맥락을 추가하라</h3>\n<p>‘state’ 하나만 보면 이게 뭔지 감이 오는가?<br>\n주소 일부라는 사실을 알기 위해선 ‘addrState’라는 변수를 사용하는게 적당하다.<br>\n이런 의미에서 접두어와 같은 의미있는 맥락을 추가하는 것이 좋다.</p>\n<h3 id=\"불필요한-맥락을-없애라\" style=\"position:relative;\"><a href=\"#%EB%B6%88%ED%95%84%EC%9A%94%ED%95%9C-%EB%A7%A5%EB%9D%BD%EC%9D%84-%EC%97%86%EC%95%A0%EB%9D%BC\" aria-label=\"불필요한 맥락을 없애라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>불필요한 맥락을 없애라</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">accountAddress와 customerAddress는 Address 클래스 인스턴스로는 좋은 이름이나 \r\n클래스 이름으로는 적합하지 못하다.</code></pre></div>\n<h3 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h3>\n<p>학습한 규칙 몇 개를 적용해 코드 가독성이 높아지는지 살펴야겠다.<br>\n다른 사람이 짠 코드를 손본다면 리팩터링 도구를 사용해 문제 해결 목적으로 이름을 개선하라.</p>\n<p><del>우리 회사는 인텔리제이 못 쓰게 하는데…</del></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#intro\">Intro</a></p>\n<ul>\n<li><a href=\"#%EC%9D%98%EB%8F%84%EB%A5%BC-%EB%B6%84%EB%AA%85%ED%9E%88-%EB%B0%9D%ED%98%80%EB%9D%BC\">의도를 분명히 밝혀라</a></li>\n<li><a href=\"#%EA%B7%B8%EB%A6%87%EB%90%9C-%EC%A0%95%EB%B3%B4%EB%A5%BC-%ED%94%BC%ED%95%98%EB%9D%BC\">그릇된 정보를 피하라</a></li>\n<li><a href=\"#%EC%9D%98%EB%AF%B8-%EC%9E%88%EA%B2%8C-%EA%B5%AC%EB%B6%84%ED%95%98%EB%9D%BC\">의미 있게 구분하라</a></li>\n<li><a href=\"#%EB%B0%9C%EC%9D%8C%ED%95%98%EA%B8%B0-%EC%89%AC%EC%9A%B4-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\">발음하기 쉬운 이름을 사용하라</a></li>\n<li><a href=\"#%EA%B2%80%EC%83%89%ED%95%98%EA%B8%B0-%EC%89%AC%EC%9A%B4-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\">검색하기 쉬운 이름을 사용하라</a></li>\n<li><a href=\"#%EC%9D%B8%EC%BD%94%EB%94%A9%EC%9D%84-%ED%94%BC%ED%95%98%EB%9D%BC\">인코딩을 피하라</a></li>\n<li><a href=\"#%EC%9E%90%EC%8B%A0%EC%9D%98-%EA%B8%B0%EC%96%B5%EB%A0%A5%EC%9D%84-%EC%9E%90%EB%9E%91%ED%95%98%EC%A7%80-%EB%A7%88%EB%9D%BC\">자신의 기억력을 자랑하지 마라</a></li>\n<li><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%9D%B4%EB%A6%84\">클래스 이름</a></li>\n<li><a href=\"#%EB%A7%A4%EC%84%9C%EB%93%9C-%EC%9D%B4%EB%A6%84\">매서드 이름</a></li>\n<li><a href=\"#%EA%B8%B0%EB%B0%9C%ED%95%9C-%EC%9D%B4%EB%A6%84%EC%9D%80-%ED%94%BC%ED%95%98%EB%9D%BC\">기발한 이름은 피하라</a></li>\n<li><a href=\"#%ED%95%9C-%EA%B0%9C%EB%85%90%EC%97%90-%ED%95%9C-%EB%8B%A8%EC%96%B4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\">한 개념에 한 단어를 사용하라</a></li>\n<li><a href=\"#%EB%A7%90%EC%9E%A5%EB%82%9C%EC%9D%84-%ED%95%98%EC%A7%80-%EB%A7%88%EB%9D%BC\">말장난을 하지 마라</a></li>\n<li><a href=\"#%ED%95%B4%EB%B2%95-%EC%98%81%EC%97%AD%EC%97%90%EC%84%9C-%EA%B0%80%EC%A0%B8%EC%98%A8-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\">해법 영역에서 가져온 이름을 사용하라</a></li>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%98%81%EC%97%AD%EC%97%90%EC%84%9C-%EA%B0%80%EC%A0%B8%EC%98%A8-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\">문제 영역에서 가져온 이름을 사용하라</a></li>\n<li><a href=\"#%EC%9D%98%EB%AF%B8-%EC%9E%88%EB%8A%94-%EB%A7%A5%EB%9D%BD%EC%9D%84-%EC%B6%94%EA%B0%80%ED%95%98%EB%9D%BC\">의미 있는 맥락을 추가하라</a></li>\n<li><a href=\"#%EB%B6%88%ED%95%84%EC%9A%94%ED%95%9C-%EB%A7%A5%EB%9D%BD%EC%9D%84-%EC%97%86%EC%95%A0%EB%9D%BC\">불필요한 맥락을 없애라</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\">마치면서</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 28, 2024","title":"2장 의미있는 이름","categories":"Clean_Code","author":"신승민","emoji":"🥭"},"fields":{"slug":"/[Clean Code] 2장 의미있는 이름/"}},"prev":{"id":"703db23a-f43d-5ff7-b771-809fa6de8a3b","html":"<h2 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h2>\n<p>깔끔하게 형식을 맞춰 코드를 짜야한다.<br>\n간단한 규칙을 정하고, 그 규칙을 착실히 따라야 한다.<br>\n팀으로 일한다면 팀 규칙을 따라야 한다.<br>\n필요하다면 도구도 활용하자.</p>\n<h3 id=\"형식을-맞추는-목적\" style=\"position:relative;\"><a href=\"#%ED%98%95%EC%8B%9D%EC%9D%84-%EB%A7%9E%EC%B6%94%EB%8A%94-%EB%AA%A9%EC%A0%81\" aria-label=\"형식을 맞추는 목적 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>형식을 맞추는 목적</h3>\n<p>오늘 구현한 코드의 가독성은 앞으로 바뀔 코드의 품질에 지대한 영향을 미친다.<br>\n맨 처음 잡아놓ㅇ느 구현 스타일과 가독성 수준은 유지보수 용이성과 확장성에 계속 영향을 미친다.<br>\n원래 코드는 사라질지라도 개발자의 스타일과 규율은 사라지지 않는다.</p>\n<h3 id=\"적절한-행-길이를-유지하라\" style=\"position:relative;\"><a href=\"#%EC%A0%81%EC%A0%88%ED%95%9C-%ED%96%89-%EA%B8%B8%EC%9D%B4%EB%A5%BC-%EC%9C%A0%EC%A7%80%ED%95%98%EB%9D%BC\" aria-label=\"적절한 행 길이를 유지하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>적절한 행 길이를 유지하라</h3>\n<p>소스 코드는 얼마나 길어야 적당할까? 라는 질문에 이렇게 답한다.<br>\n500줄을 넘지 않고 대부분 200줄 정도인 파일로도 커다란 시스템을 구축할 수 있다.</p>\n<h4 id=\"신문-기사처럼-작성하라\" style=\"position:relative;\"><a href=\"#%EC%8B%A0%EB%AC%B8-%EA%B8%B0%EC%82%AC%EC%B2%98%EB%9F%BC-%EC%9E%91%EC%84%B1%ED%95%98%EB%9D%BC\" aria-label=\"신문 기사처럼 작성하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>신문 기사처럼 작성하라</h4>\n<p>이름은 간단하면서도 설명이 가능하게 짓는다.<br>\n첫 부분은 고차원 개념과 알고리즘을 설명한다.<br>\n아래로 내려갈수록 세세하게 묘사한다.<br>\n마지막에는 가장 저차원 함수와 세부 내역이 나온다.</p>\n<h4 id=\"개념은-빈-행으로-분리하라\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%85%90%EC%9D%80-%EB%B9%88-%ED%96%89%EC%9C%BC%EB%A1%9C-%EB%B6%84%EB%A6%AC%ED%95%98%EB%9D%BC\" aria-label=\"개념은 빈 행으로 분리하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개념은 빈 행으로 분리하라</h4>\n<p>생각 사이는 빈 행을 넣어 분리하자.<br>\n행 묶음이 분리되어 보이면 되겠다.</p>\n<h4 id=\"세로-밀집도\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EB%A1%9C-%EB%B0%80%EC%A7%91%EB%8F%84\" aria-label=\"세로 밀집도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세로 밀집도</h4>\n<p>서로 밀접한 코드 행은 세로로 가까이 놓여야 한다.<br>\n굳이 떨어뜨려 놓을 필요가 없다.</p>\n<h4 id=\"수직-거리\" style=\"position:relative;\"><a href=\"#%EC%88%98%EC%A7%81-%EA%B1%B0%EB%A6%AC\" aria-label=\"수직 거리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>수직 거리</h4>\n<p>이 조각 저 조각이 어디에 있는지 찾고 기억하느라 시간과 노력을 소모한다.<br>\n그러므로 서로 밀접한 개념은 한 파일에 속해야 마땅하다.<br>\n이게 바로 <code class=\"language-text\">protected</code>변수를 피해야 하는 이유 중 하나다.</p>\n<h3 id=\"변수-선언\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8\" aria-label=\"변수 선언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수 선언</h3>\n<ul>\n<li>변수는 사용하는 위치에 최대한 가까이 선언한다.</li>\n</ul>\n<blockquote>\n<p>이렇게 되면 for문 안에 변수를 선언하게 되는데,<br>\n그럼 인스턴스를 계속 생성해서 성능이 저하되지 않을까?</p>\n</blockquote>\n<h3 id=\"인스턴스-변수\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%B3%80%EC%88%98\" aria-label=\"인스턴스 변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인스턴스 변수</h3>\n<ul>\n<li>인스턴스 변수는 클래스 맨 처음에 선언한다.</li>\n</ul>\n<p>자바에서는 보통 클래스 맨 처음에 인스턴스 변수를 선언한다.</p>\n<blockquote>\n<p>위에서 한 고민 해결:)</p>\n</blockquote>\n<h3 id=\"종속-함수\" style=\"position:relative;\"><a href=\"#%EC%A2%85%EC%86%8D-%ED%95%A8%EC%88%98\" aria-label=\"종속 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>종속 함수</h3>\n<ul>\n<li>한 함수가 다른 함수를 호출한다면 두 함수는 세로로 가까이 배치한다.</li>\n<li>또한 가능하다면 <strong>호출하는 함수</strong>를 <strong>호출되는 함수</strong>보다 먼저 배치한다.</li>\n</ul>\n<p>상수를 알아야 마땅한 함수에서 실제로 사용하는 함수로 상수를 넘겨주는 방법이 더 좋다.</p>\n<h3 id=\"개념적-유사성\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%85%90%EC%A0%81-%EC%9C%A0%EC%82%AC%EC%84%B1\" aria-label=\"개념적 유사성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개념적 유사성</h3>\n<ul>\n<li>친화도가 높을수록 코드를 <strong>가까이 배치</strong>한다.</li>\n</ul>\n<blockquote>\n<p>친화도가 높은 요인 예시 : 한 함수가 다른 함수를 호출해 생기는 직접적인 종속성, 변수와 그 변수를 사용하는 함수, 비슷한 동작을 수행하는 일군의 함수</p>\n</blockquote>\n<h4 id=\"세로-순서\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EB%A1%9C-%EC%88%9C%EC%84%9C\" aria-label=\"세로 순서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세로 순서</h4>\n<p>가장 중요한 개념을 가장 먼저 표현한다.<br>\n세세한 사항은 가장 마지막에 표현한다.</p>\n<h3 id=\"가로-형식-맞추기\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EB%A1%9C-%ED%98%95%EC%8B%9D-%EB%A7%9E%EC%B6%94%EA%B8%B0\" aria-label=\"가로 형식 맞추기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가로 형식 맞추기</h3>\n<p>한 행은 가로로 얼마나 길어야 적당할까? 라는 질문에 이렇게 답한다.<br>\n10자 미만은 30%, 20자에서 60자 사이는 40%, 80자 이후부터 행 수는 급격하게 감소한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"프로그래머는 명백하게 짧은 행을 선호한다.\"</code></pre></div>\n<p>개인적으로 저자는 120자 정도로 행 길이를 제한한다.</p>\n<h4 id=\"가로-공백과-밀집도\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EB%A1%9C-%EA%B3%B5%EB%B0%B1%EA%B3%BC-%EB%B0%80%EC%A7%91%EB%8F%84\" aria-label=\"가로 공백과 밀집도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가로 공백과 밀집도</h4>\n<ul>\n<li>함수와 인수 사이에 공백을 두지 않는다.</li>\n<li>연산자 우선순위에 따라 공백을 정한다.(곱셈, 승수 -> 공백 x / 덧셈, 뺄셈 -> 공백 O)</li>\n</ul>\n<h4 id=\"가로-정렬\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EB%A1%9C-%EC%A0%95%EB%A0%AC\" aria-label=\"가로 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가로 정렬</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">Socket</span> socket<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span>   requestparsingDeadline<span class=\"token punctuation\">;</span></code></pre></div>\n<p>이런 정렬은 유용하지 못하다.</p>\n<p>정렬하지 않으면 오히려 중대한 결함을 찾기 쉽다.<br>\n정렬이 필요할 정도로 목록이 길다면 문제는 목록 길이지 정렬 부족이 아니다.</p>\n<ul>\n<li>선언부가 길다면 클래스를 쪼개야 한다.</li>\n</ul>\n<h4 id=\"들여쓰기\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%97%AC%EC%93%B0%EA%B8%B0\" aria-label=\"들여쓰기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들여쓰기</h4>\n<ul>\n<li>들여쓰기한 파일은 구조가 한눈에 들어온다.</li>\n<li>변수, 생성자 함수, 접근자 함수, 메서드가 금방 보인다.</li>\n</ul>\n<h3 id=\"들여쓰기-무시하기\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%97%AC%EC%93%B0%EA%B8%B0-%EB%AC%B4%EC%8B%9C%ED%95%98%EA%B8%B0\" aria-label=\"들여쓰기 무시하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들여쓰기 무시하기</h3>\n<p>간단한 if문, 짧은 while문, 짧은 함수에서 들여쓰기 규칙을 무시하고픈 유혹이 생긴다.</p>\n<blockquote>\n<p>난 안 생긴다…</p>\n</blockquote>\n<h4 id=\"가짜-범위\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A7%9C-%EB%B2%94%EC%9C%84\" aria-label=\"가짜 범위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가짜 범위</h4>\n<p>빈 while문이나 for문을 피하지 못할 때는 빈 블록을 오라볼 들여쓰고 괄호로 감싼다.</p>\n<ul>\n<li>세미콜론(;)은 새 행에다 제대로 들여써서 넣어준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>dis<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> readbufferSize<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"팀-규칙\" style=\"position:relative;\"><a href=\"#%ED%8C%80-%EA%B7%9C%EC%B9%99\" aria-label=\"팀 규칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>팀 규칙</h3>\n<p>읽기 쉬운 문서를 만들기 위해서는 스타일이 일관적이고 매끄러워야 한다.<br>\n독자에게 신뢰감을 주어서 복잡하지 않게 하자.</p>\n<h3 id=\"밥-아저씨의-형식-규칙\" style=\"position:relative;\"><a href=\"#%EB%B0%A5-%EC%95%84%EC%A0%80%EC%94%A8%EC%9D%98-%ED%98%95%EC%8B%9D-%EA%B7%9C%EC%B9%99\" aria-label=\"밥 아저씨의 형식 규칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>밥 아저씨의 형식 규칙</h3>\n<p>목록 5-6에 잘 드러난다.<br>\n개인적으로 무척이나 아름답다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#intro\">Intro</a></p>\n<ul>\n<li>\n<p><a href=\"#%ED%98%95%EC%8B%9D%EC%9D%84-%EB%A7%9E%EC%B6%94%EB%8A%94-%EB%AA%A9%EC%A0%81\">형식을 맞추는 목적</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A0%81%EC%A0%88%ED%95%9C-%ED%96%89-%EA%B8%B8%EC%9D%B4%EB%A5%BC-%EC%9C%A0%EC%A7%80%ED%95%98%EB%9D%BC\">적절한 행 길이를 유지하라</a></p>\n<ul>\n<li><a href=\"#%EC%8B%A0%EB%AC%B8-%EA%B8%B0%EC%82%AC%EC%B2%98%EB%9F%BC-%EC%9E%91%EC%84%B1%ED%95%98%EB%9D%BC\">신문 기사처럼 작성하라</a></li>\n<li><a href=\"#%EA%B0%9C%EB%85%90%EC%9D%80-%EB%B9%88-%ED%96%89%EC%9C%BC%EB%A1%9C-%EB%B6%84%EB%A6%AC%ED%95%98%EB%9D%BC\">개념은 빈 행으로 분리하라</a></li>\n<li><a href=\"#%EC%84%B8%EB%A1%9C-%EB%B0%80%EC%A7%91%EB%8F%84\">세로 밀집도</a></li>\n<li><a href=\"#%EC%88%98%EC%A7%81-%EA%B1%B0%EB%A6%AC\">수직 거리</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8\">변수 선언</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%B3%80%EC%88%98\">인스턴스 변수</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A2%85%EC%86%8D-%ED%95%A8%EC%88%98\">종속 함수</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B0%9C%EB%85%90%EC%A0%81-%EC%9C%A0%EC%82%AC%EC%84%B1\">개념적 유사성</a></p>\n<ul>\n<li><a href=\"#%EC%84%B8%EB%A1%9C-%EC%88%9C%EC%84%9C\">세로 순서</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B0%80%EB%A1%9C-%ED%98%95%EC%8B%9D-%EB%A7%9E%EC%B6%94%EA%B8%B0\">가로 형식 맞추기</a></p>\n<ul>\n<li><a href=\"#%EA%B0%80%EB%A1%9C-%EA%B3%B5%EB%B0%B1%EA%B3%BC-%EB%B0%80%EC%A7%91%EB%8F%84\">가로 공백과 밀집도</a></li>\n<li><a href=\"#%EA%B0%80%EB%A1%9C-%EC%A0%95%EB%A0%AC\">가로 정렬</a></li>\n<li><a href=\"#%EB%93%A4%EC%97%AC%EC%93%B0%EA%B8%B0\">들여쓰기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%93%A4%EC%97%AC%EC%93%B0%EA%B8%B0-%EB%AC%B4%EC%8B%9C%ED%95%98%EA%B8%B0\">들여쓰기 무시하기</a></p>\n<ul>\n<li><a href=\"#%EA%B0%80%EC%A7%9C-%EB%B2%94%EC%9C%84\">가짜 범위</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%8C%80-%EA%B7%9C%EC%B9%99\">팀 규칙</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B0%A5-%EC%95%84%EC%A0%80%EC%94%A8%EC%9D%98-%ED%98%95%EC%8B%9D-%EA%B7%9C%EC%B9%99\">밥 아저씨의 형식 규칙</a></p>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 02, 2024","title":"4장 주석","categories":"Clean_Code","author":"신승민","emoji":"💩"},"fields":{"slug":"/[Clean Code] 5장 형식 맞추기/"}},"site":{"siteMetadata":{"siteUrl":"https://maljaaa.github.io","comments":{"utterances":{"repo":"maljaaa/maljaaa.github.io"}}}}},"pageContext":{"slug":"/[Clean Code] 3장 함수/","nextSlug":"/[Clean Code] 2장 의미있는 이름/","prevSlug":"/[Clean Code] 5장 형식 맞추기/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}