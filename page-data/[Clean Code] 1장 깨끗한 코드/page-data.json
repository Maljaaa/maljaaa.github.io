{"componentChunkName":"component---src-templates-blog-template-js","path":"/[Clean Code] 1장 깨끗한 코드/","result":{"data":{"cur":{"id":"e7746db5-6421-5dfc-8523-7dfbeddaf021","html":"<h2 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h2>\n<p>회사에서 유지보수를 하다가 끔찍한 프로젝트를 보게 되었다. 변수명과 클래스 명은 모두 1,2,3 혹은 A, B, C로 구분되어 있었다. 이런 이유 때문에 유지보수 하는 일이 너무 힘들었다. 그래서 어떻게 하면 나는 이런 코드를 짜지 않을 수 있을까? 어떻게 하면 이 코드를 좋은 코드로 바꿀 수 있을까?라는 의문점이 생겼다. 그래서 미루고 미뤄왔던 클린코드를 읽어보려고 한다.</p>\n<h3 id=\"코드가-존재하리라\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EA%B0%80-%EC%A1%B4%EC%9E%AC%ED%95%98%EB%A6%AC%EB%9D%BC\" aria-label=\"코드가 존재하리라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드가 존재하리라</h3>\n<p>요즘 기술이 발전함에 따라 코드를 자동으로 생성해주는 기술들이 생겨나기 시작했다. 그럼에도 저자는 코드가 사라질 가망이 없다고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"궁긍적으로 코드는 요구사항을 표현하는 언어라는 사실을 명심한다. \r\n요구사항에 더욱 가까운 언어를 만들 수도 있고, 요구사항에서 정형 구조를 뽑아내는 도구를 만들 수도 있다. \r\n하지만 어느 순간에는 정밀한 표현이 필요하다.\r\n그 필요성을 없앨 방법은 없다.\r\n\r\n그러므로 코드도 항상 존재하리라.\"</code></pre></div>\n<h3 id=\"나쁜-코드\" style=\"position:relative;\"><a href=\"#%EB%82%98%EC%81%9C-%EC%BD%94%EB%93%9C\" aria-label=\"나쁜 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나쁜 코드</h3>\n<p>80년대 후반 킬러 앱 하나를 구현한 회사를 이야기하면서 시작한다.<br>\n회사가 망했는데, 그 원인은 바로 나쁜 코드 탓이었다.<br>\n나쁜 코드에 발목이 잡혀 고생하는 것을 고행(Wading)이라 부른다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">우리 모두는 자신이 짠 쓰레기 코드를 쳐다보며 나중에 손보겠다고 생각한 경험이 있다. \r\n우리 모두는 대충 짠 프로그램이 돌아간다는 사실에 안도감을 느끼며 그래도 안 돌아가는 프로그램보다 돌아가는 쓰레기가 좋다고 스스로를 위로한 경험이 있다. \r\n다시 돌아와 나중에 정리하겠다고 다짐했었따.\r\n물론 그때 그 시절 우리는 르블랑의 법칙(Leblanc's Law)을 몰랐다.\r\n\r\n나중은 결코 오지 않는다.</code></pre></div>\n<h3 id=\"나쁜-코드로-치르는-대가\" style=\"position:relative;\"><a href=\"#%EB%82%98%EC%81%9C-%EC%BD%94%EB%93%9C%EB%A1%9C-%EC%B9%98%EB%A5%B4%EB%8A%94-%EB%8C%80%EA%B0%80\" aria-label=\"나쁜 코드로 치르는 대가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나쁜 코드로 치르는 대가</h3>\n<p>나쁜 코드가 쌓일수록 팀 생산성은 떨어진다.<br>\n그러다 팀은 재설계를 요구한다.<br>\n새로운 프로젝트를 시작하기 때문에 모두가 합류하고 싶어한다.<br>\n나도 그렇다… 처음부터 시작해 진정으로 아름다운 작품을 창조할 기회니까.<br>\n재설계는 10년이 넘을 수도 있다.<br>\n그러다 보면 원년 멤버는 사라져있고, 새로운 팀원들이 새 시스템을 설계하고자 나선다.<br>\n즉, 깨끗한 코드를 만드는 노력은 전문가로서 살아남는 길이라는 사실이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">자신이 의사라 가정하자.\r\n어느 환자가 수술 전에 손을 씻지 말라고 요구한다.\r\n시간이 너무 걸리니까.\r\n확실히 환자는 상사다.\r\n하지만 의사는 단호하게 거부한다.\r\n왜? 질병과 감염의 위험은 환자보다 의사가 더 잘 아니까.\r\n환자 말을 그대로 따르는 행동은 (범죄일 뿐만 아니라) 전문가답지 못하니까.\r\n\r\n프로그래머도 마찬가지다.\r\n나쁜 코드의 위험을 이해하지 못하는 관리자 말을 그대로 따르는 행동은 전문가답지 못하다.</code></pre></div>\n<ul>\n<li>중요한 워딩 : 가독성, 명쾌한 추상화, TDD, 주의</li>\n</ul>\n<p>-> <strong>중복을 피하라, 한 기능만 수행하라, 제대로 표현하라, 작게 추상화하라</strong></p>\n<h3 id=\"보이스카우트-규칙\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%9D%B4%EC%8A%A4%EC%B9%B4%EC%9A%B0%ED%8A%B8-%EA%B7%9C%EC%B9%99\" aria-label=\"보이스카우트 규칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보이스카우트 규칙</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"캠프장은 처음 왔을 때보다 더 깨끗하게 해놓고 떠나라\"</code></pre></div>\n<p>지속적인 개선이야말로 전문가 정신의 본질이다.</p>\n<h3 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h3>\n<p>이 책을 통해 여러 방법을 익히고, 느껴야한다.<br>\n그렇게 체득한 후에 개선점을 생각하고, 나의 가치를 올릴 수 있는 방향으로 나아가야겠다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#intro\">Intro</a></p>\n<ul>\n<li><a href=\"#%EC%BD%94%EB%93%9C%EA%B0%80-%EC%A1%B4%EC%9E%AC%ED%95%98%EB%A6%AC%EB%9D%BC\">코드가 존재하리라</a></li>\n<li><a href=\"#%EB%82%98%EC%81%9C-%EC%BD%94%EB%93%9C\">나쁜 코드</a></li>\n<li><a href=\"#%EB%82%98%EC%81%9C-%EC%BD%94%EB%93%9C%EB%A1%9C-%EC%B9%98%EB%A5%B4%EB%8A%94-%EB%8C%80%EA%B0%80\">나쁜 코드로 치르는 대가</a></li>\n<li><a href=\"#%EB%B3%B4%EC%9D%B4%EC%8A%A4%EC%B9%B4%EC%9A%B0%ED%8A%B8-%EA%B7%9C%EC%B9%99\">보이스카우트 규칙</a></li>\n<li><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"Intro 회사에서 유지보수를 하다가 끔찍한 프로젝트를 보게 되었다. 변수명과 클래스 명은 모두 1,2,3 혹은 A, B, C로 구분되어 있었다. 이런 이유 때문에 유지보수 하는 일이 너무 힘들었다. 그래서 어떻게 하면 나는 이런 코드를 짜지 않을 수 있을까? 어떻게 하면 이 코드를 좋은 코드로 바꿀 수 있을까?라는 의문점이 생겼다. 그래서 미루고 미뤄왔던 클린코드를 읽어보려고 한다. 코드가 존재하리라 요즘 기술이 발전함에 따라 코드를 자동으로 생성해주는 기술들이 생겨나기 시작했다. 그럼에도 저자는 코드가 사라질 가망이 없다고 한다. 나쁜 코드 80년대 후반 킬러 앱 하나를 구현한 회사를 이야기하면서 시작한다. 회사가 망했는데, 그 원인은 바로 나쁜 코드 탓이었다. 나쁜 코드에 발목이 잡혀 고생하는 것을 고행(Wading)이라 부른다. 나쁜 코드로 치르는 대가 나쁜 코드가 쌓일수록 팀 생산성은 떨어진다. 그러다 팀은 재설계를 요구한다. 새로운 프로젝트를 시작하기 때문에 모두가 합류…","frontmatter":{"date":"August 27, 2024","title":"1장 깨끗한 코드","categories":"Clean_Code","author":"신승민","emoji":"🥭"},"fields":{"slug":"/[Clean Code] 1장 깨끗한 코드/"}},"next":{"id":"4a66465d-215e-582d-9a35-35ccf9a4140d","html":"<h2 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h2>\n<p>스마트해썹 공정 프로그램을 개발하다가 보고서 조회 속도가 너무 느리다는 걸 발견했다.\r\n조회 조건을 <code class=\"language-text\">select</code> 해와서 그런가 싶었지만, 단순히 조회하려는 내용 자체를 가져오는데 오래 걸렸다.\r\n<code class=\"language-text\">EXPLAIN ANAYLZE</code>로 분석한 결과 다음과 같았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">Sort  <span class=\"token punctuation\">(</span>cost<span class=\"token operator\">=</span><span class=\"token number\">824979.95</span><span class=\"token punctuation\">.</span><span class=\"token number\">.824985</span><span class=\"token number\">.01</span> <span class=\"token keyword\">rows</span><span class=\"token operator\">=</span><span class=\"token number\">2024</span> width<span class=\"token operator\">=</span><span class=\"token number\">638</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>actual <span class=\"token keyword\">time</span><span class=\"token operator\">=</span><span class=\"token number\">2024.948</span><span class=\"token punctuation\">.</span><span class=\"token number\">.2024</span><span class=\"token number\">.954</span> <span class=\"token keyword\">rows</span><span class=\"token operator\">=</span><span class=\"token number\">3</span> loops<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n\r\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n\r\nPlanning <span class=\"token keyword\">Time</span>: <span class=\"token number\">0.765</span> ms\r\nExecution <span class=\"token keyword\">Time</span>: <span class=\"token number\">2034.187</span> ms</code></pre></div>\n<blockquote>\n<p>쿼리 부분이 포함되어 있어서 중간은 생략했다.</p>\n</blockquote>\n<p>여기서 가장 중요하게 봐야할 부분은 <code class=\"language-text\">Execution Time: 2034.187 ms</code>이다.\r\n이렇게 때문에 조회 속도가 나오지 않았던 것이다.</p>\n<p>그래서 나는 서브쿼리를 조인으로 풀어가고, 필요없는 컬럼은 조회하지 않았다.\r\n또한 이미 걸려있는 인덱스를 적절히 활용했다.\r\n내가 쿼리를 수정하고 난 다음 성능을 분석한 결과는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">Sort  <span class=\"token punctuation\">(</span>cost<span class=\"token operator\">=</span><span class=\"token number\">72696.13</span><span class=\"token punctuation\">.</span><span class=\"token number\">.72705</span><span class=\"token number\">.22</span> <span class=\"token keyword\">rows</span><span class=\"token operator\">=</span><span class=\"token number\">3636</span> width<span class=\"token operator\">=</span><span class=\"token number\">316</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>actual <span class=\"token keyword\">time</span><span class=\"token operator\">=</span><span class=\"token number\">118.811</span><span class=\"token punctuation\">.</span><span class=\"token number\">.119</span><span class=\"token number\">.340</span> <span class=\"token keyword\">rows</span><span class=\"token operator\">=</span><span class=\"token number\">13</span> loops<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n  \r\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n\r\nPlanning <span class=\"token keyword\">Time</span>: <span class=\"token number\">0.286</span> ms\r\nExecution <span class=\"token keyword\">Time</span>: <span class=\"token number\">119.416</span> ms</code></pre></div>\n<p><code class=\"language-text\">Execution Time</code> 부분을 보면 어떤가?\r\n119.416 ms 정도 소요됐다.\r\n단순히 나누기 연산을 해봐도 17배 정도 빨라진 셈이다.\r\n여러번 성능 테스트를 해본 결과 약 20배 정도 빨라졌다는 것을 알 수 있었다.</p>\n<p>그러면서 의심이 들었다… 내가 잘 짰나..?\r\nSQL을 보니 연산 작업으로 인해 코드가 길고 복잡했다.\r\n이렇게 가져가면 너무나 유지보수가 힘들고, 확정성이 보장되지 않을 것 같았다.</p>\n<h3 id=\"database의-책임\" style=\"position:relative;\"><a href=\"#database%EC%9D%98-%EC%B1%85%EC%9E%84\" aria-label=\"database의 책임 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DATABASE의 책임</h3>\n<p>그럼 DB에서는 최소한 어디까지 하고, 최대로는 어디까지 해야할까?\r\n정말 필요한 값을 최소한으로만 주고, 비즈니스 로직은 Controller? Service? Repository? DTO? Client? 도대체 어디서 처리해야 할까?\r\n아니면, CONCAT(), IF()와 같은 기능을 통해 데이터를 가공해서 보내주는 경우가 좋을까?\r\n한번에 데이터를 가공해서 보내주면 Client측에서 레코드 하나씩 선회하며 가공해야 하는 부담감을 덜 수 있다.\r\n판단하기 앞서서, 3계층 구조(Three-Tier Architecture)에 대해서 알아보자.</p>\n<h3 id=\"3계층-구조three-tier-architecture\" style=\"position:relative;\"><a href=\"#3%EA%B3%84%EC%B8%B5-%EA%B5%AC%EC%A1%B0three-tier-architecture\" aria-label=\"3계층 구조three tier architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3계층 구조(Three-Tier Architecture)</h3>\n<p><img src=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&#x26;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbgODd7%2Fbtq7KmO52dz%2FRYOIlg9BSCyXKrOrxhy12K%2Fimg.png\" alt=\"\">\r\n3계층 구조란, 어떠한 플랫폼을 3계층으로 나누어서 별도의 논/물리적 장치에 구축 및 운영하는 설계 구조를 말한다.</p>\n<ul>\n<li><strong>프레젠테이션 계층(Presentation Tier)</strong></li>\n</ul>\n<p>사용자가 마주하는 계층으로, <code class=\"language-text\">Front-End</code> 라고도 부른다.\r\n사용자 인터페이스와 관계없는 데이터를 처리하는 로직은 포함되지 않는다.\r\n주로 웹 서버를 예시로 들 수 있고, HTML / CSS / JavaScript 등이 이 계층에 해당된다.</p>\n<p>가공을 여기서 하면 여러 Client에서 각각의 요구사항에 맞게 데이터를 가공할 수 있다.\r\n하지만 Layered Architecture를 사용하는 이유가 사라진다.\r\n추가적으로 하드웨어 성능이 발전함에 따라 Client에서 데이터 가공을 위임하는 것도 트렌드이다.</p>\n<ul>\n<li><strong>어플리케이션 계층(Application Tier)</strong></li>\n</ul>\n<p>동적인 데이터를 제공한다.\r\n비즈니스 로직 계층 또는 트랜잭션 계층 이라고도 한다.\r\n<code class=\"language-text\">Middleware</code> 또는 <code class=\"language-text\">Back-End</code>라고도 불린다.\r\n주로 PHP / Java 등이 이 계층에 해당된다.</p>\n<p>여기에 비즈니스 로직을 적용하지 않으면 다음과 같은 문제가 생긴다.</p>\n<ol>\n<li>디버깅할 수 없다.</li>\n<li>SQL문이 복잡해진다.</li>\n<li>분할, 결합 등 확장이 어렵다.</li>\n<li>문제가 발생했을 때 오류 추적이 어렵다.</li>\n</ol>\n<p>즉, 무결성이나 일관성에 관련된 책임만이 DB에 존재해야한다.\r\n거기서 데이터를 필터링하고, 그룹핑해서 내려주는 것으로 충분하다.</p>\n<ul>\n<li><strong>데이터 계층(Data Tier)</strong></li>\n</ul>\n<p>DBMS가 이 계층에 해당된다.\r\n<code class=\"language-text\">Back-End</code>라고도 부른다.\r\n주로 MySQL / MongoDB / PostgreSQL 등이 이 계층에 해당된다.</p>\n<h3 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h3>\n<p>Architecture에 따라서 DB에 로직을 태우고 데이터를 가공해도 괜찮다고 한다.\r\n하지만 오늘날 Layered Architecture를 사용하는 현재의 Structure에는 적합하지 않다.</p>\n<p>그러므로, DB는 데이터를 Filtering, Grouping, Sorting해서 내려주고,\r\nApp Layer에서 로직을 계산하고,\r\nPresentation Layer에서 데이터를 가공해서 표시하게끔 책임을 분리하는 것이 설계와 유지보수 관점에서 바람직하다.</p>\n<p>그래서 나는 Filtering, Grouping, Sorting 정도만 해서 데이터를 내려줬고,\r\n성능 분석 결과는 별 차이 없이 비슷했다.\r\n오히려 SQL문을 보기에 더 수월해졌다.\r\n프로젝트 구조 상 Client에 계산 로직을 위임함으로써 요구사항 변경에 유연해졌고, 확장성이 좋아졌다.\r\n다른 프로젝트였다면, Service에서 비즈니스 로직을 담았을 것 같다.</p>\n<h4 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h4>\n<p><a href=\"https://jaehoney.tistory.com/183\">Database의 책임 - DB는 어디까지 해줘야 하는가? (+ 데이터 가공,…</a>\r\n<a href=\"https://jaws-coding.tistory.com/9\">3계층 구조(3 Tier- Architecture) 이해하기 [스마트인재개발원]</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#intro\">Intro</a></p>\n<ul>\n<li>\n<p><a href=\"#database%EC%9D%98-%EC%B1%85%EC%9E%84\">DATABASE의 책임</a></p>\n</li>\n<li>\n<p><a href=\"#3%EA%B3%84%EC%B8%B5-%EA%B5%AC%EC%A1%B0three-tier-architecture\">3계층 구조(Three-Tier Architecture)</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A0%95%EB%A6%AC\">정리</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"July 01, 2024","title":"Database의 책임","categories":"DB","author":"신승민","emoji":"☕"},"fields":{"slug":"/Database의 책임/"}},"prev":{"id":"ad644289-7809-51c4-a31d-49de2becd758","html":"<h2 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h2>\n<p>나는 평소에 네이밍을 하는데 어려움이 있었다. 여러 컨벤션들이 있었지만, 내가 옆에 두고 하지 않는 이상 좋은 네이밍을 하기엔 어려웠다. 아직은 경험이 없고 익숙하지 않아서 일까?… 그래서 더더욱 이번 챕터를 재미있게 봤다.</p>\n<h3 id=\"의도를-분명히-밝혀라\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EB%8F%84%EB%A5%BC-%EB%B6%84%EB%AA%85%ED%9E%88-%EB%B0%9D%ED%98%80%EB%9D%BC\" aria-label=\"의도를 분명히 밝혀라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의도를 분명히 밝혀라</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"의도가 분명하게 이름을 지으라\"</code></pre></div>\n<p>따로 주석이 필요하다면 의도를 분명히 드러내지 못했다는 말이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> d<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 경과 시간(단위: 날짜)</span></code></pre></div>\n<p>여기서 d는 아무 의미도 드러나지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> elapsedTimeInDays<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">int</span> daysSinceCreation<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">int</span> daysSinceModification<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">int</span> fileAgeInDays<span class=\"token punctuation\">;</span></code></pre></div>\n<p>의도가 드러나는 이름을 사용하면 코드 이해와 변경이 쉬워진다. 그러면서도 영어 동사의 표현을 잘 알아야겠다는 생각이 든다.<br>\n다음 코드가 무엇을 하는지 살펴보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getThem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> list1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> x <span class=\"token operator\">:</span> theList<span class=\"token punctuation\">)</span> \r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\r\n            list1<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> list1<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>복잡한 문장은 없다. 공백과 들여쓰기도 적당하다. 변수는 세개, 상수는 두 개뿐이다.<br>\n문제는 코드의 <strong>단순성</strong>이 아니라 코드의 <strong>함축성</strong>이다.<br>\n즉, 코드 맥락이 코드 자체에 명시적으로 드러나지 않는다.</p>\n<ul>\n<li>theList에 무엇이 들었는가?</li>\n<li>theList에서 0번째 값이 어째서 중요한가?</li>\n<li>값 4는 무슨 의미인가?</li>\n<li>함수가 반환하는 리스트 list1을 어떻게 사용하는가?</li>\n</ul>\n<p>그렇다면 지뢰찾기 게임이라고 가정해보고 바꿔보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token function\">getFlaggedCells</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> flaggedCells <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> cell <span class=\"token operator\">:</span> gameBoard<span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">[</span><span class=\"token constant\">STATUS_VALUE</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token constant\">FLAGGED</span><span class=\"token punctuation\">)</span>\r\n            flaggedCells<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> flaggedCells<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 작성하니 이해하기 더 수월하다.<br>\n더 나아가, int 배열 대신 클래스를 사용하고, 상수 대신 isFlagged()라는 함수를 사용해 개선해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token function\">getFlaggedCells</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">></span></span> flaggedCells <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Cell</span> cell <span class=\"token operator\">:</span> gameBoard<span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">.</span><span class=\"token function\">isFlagged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n            flaggedCells<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> flaggedCells<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"그릇된-정보를-피하라\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A6%87%EB%90%9C-%EC%A0%95%EB%B3%B4%EB%A5%BC-%ED%94%BC%ED%95%98%EB%9D%BC\" aria-label=\"그릇된 정보를 피하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그릇된 정보를 피하라</h3>\n<ul>\n<li>다른 플랫폼에서 사용하는 코드를 변수이름으로 하지 말아라.</li>\n<li>리스트를 000List라 명명하지 말고 000s로 명명해라.</li>\n<li>서로 흡사한 이름을 사용하지 않도록 주의하라.</li>\n<li>l은 1과 혼동되고, O는 0과 혼동되므로 주의하라.</li>\n</ul>\n<h3 id=\"의미-있게-구분하라\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EB%AF%B8-%EC%9E%88%EA%B2%8C-%EA%B5%AC%EB%B6%84%ED%95%98%EB%9D%BC\" aria-label=\"의미 있게 구분하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의미 있게 구분하라</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">명확한 관례가 없다면 변수 moneyAmount는 money와 구분이 안 된다.  \r\ncustomerInfo는 customer와, accountData는 account와, theMessage는 message와 구분이 안 된다.  \r\n읽는 사람이 차이를 알도록 이름을 지어라.</code></pre></div>\n<h3 id=\"발음하기-쉬운-이름을-사용하라\" style=\"position:relative;\"><a href=\"#%EB%B0%9C%EC%9D%8C%ED%95%98%EA%B8%B0-%EC%89%AC%EC%9A%B4-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"발음하기 쉬운 이름을 사용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>발음하기 쉬운 이름을 사용하라</h3>\n<p>다른 개발자와 소통할 때 변수를 이야기하는 상황이 오게 되는데,<br>\n이때 지적인 대화가 가능해진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">마이키, 이 레코드 좀 보세요. 'Generation Timestamp' 값이 내일 날짜입니다!</code></pre></div>\n<blockquote>\n<p>나는 이 부분을 많이 반성한다…</p>\n</blockquote>\n<h3 id=\"검색하기-쉬운-이름을-사용하라\" style=\"position:relative;\"><a href=\"#%EA%B2%80%EC%83%89%ED%95%98%EA%B8%B0-%EC%89%AC%EC%9A%B4-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"검색하기 쉬운 이름을 사용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>검색하기 쉬운 이름을 사용하라</h3>\n<p>문자 하나를 사용하는 이름과 상수는 쉽게 눈에 띄지 않는다.<br>\n그래서 저자와 마찬가지로 나는 간단한 메서드에서 로컬 변수만 한 문자를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"이름 길이는 범위 크기에 비례해야 한다.\"</code></pre></div>\n<p>변수나 상수를 코드 여러 곳에서 사용한다면 검색하기 쉬운 이름이어야 한다.</p>\n<h3 id=\"인코딩을-피하라\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EC%BD%94%EB%94%A9%EC%9D%84-%ED%94%BC%ED%95%98%EB%9D%BC\" aria-label=\"인코딩을 피하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인코딩을 피하라</h3>\n<p>유형이나 범위 정보까지 인코딩에 넣으면 이름을 해독하기 어려워진다.</p>\n<ul>\n<li>헝가리식 표기법 : 변수 및 함수의 인자 이름 앞에 데이터 타입을 명시하는 코딩 규칙</li>\n<li>멤버 변수 접두어 : 예를 들어 멤버 변수에 m_이라는 접두어</li>\n<li>인터페이스 클래스와 구현 클래스 : <strong>구현 클래스</strong>에 인코딩( ex) ShapeFactoryImp )</li>\n</ul>\n<h3 id=\"자신의-기억력을-자랑하지-마라\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EC%8B%A0%EC%9D%98-%EA%B8%B0%EC%96%B5%EB%A0%A5%EC%9D%84-%EC%9E%90%EB%9E%91%ED%95%98%EC%A7%80-%EB%A7%88%EB%9D%BC\" aria-label=\"자신의 기억력을 자랑하지 마라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자신의 기억력을 자랑하지 마라</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">똑똑한 프로그래머와 전문가 프로그래머 사이에서 나타나는 차이점 하나만 들자면, 전문가 프로그래머는 명료함이 최고라는 사실을 이해한다.</code></pre></div>\n<h3 id=\"클래스-이름\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%9D%B4%EB%A6%84\" aria-label=\"클래스 이름 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 이름</h3>\n<p>명사나 명사구가 적합하다.<br>\nManager, Processor, Data, Info 등과 같은 단어는 피하고, 동사는 사용하지 않는다.</p>\n<h3 id=\"매서드-이름\" style=\"position:relative;\"><a href=\"#%EB%A7%A4%EC%84%9C%EB%93%9C-%EC%9D%B4%EB%A6%84\" aria-label=\"매서드 이름 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>매서드 이름</h3>\n<p>동사나 동사구가 적합하다.<br>\n접근자 - get, 변경자 - set, 조건자 - is<br>\n생성자를 중복정의할 때는 정적 팩토리 매서드를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Complex</span> fulcrumPoint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Complex</span>\r\n보다\r\n<span class=\"token class-name\">Complex</span> fulcrumPoint <span class=\"token operator\">=</span> <span class=\"token class-name\">Complex<span class=\"token punctuation\">.</span>FromRealNumber</span><span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n가 좋다<span class=\"token punctuation\">.</span></code></pre></div>\n<p>생성자 사용을 제한하려면 해당 생성자를 private로 선언한다.</p>\n<h3 id=\"기발한-이름은-피하라\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B0%9C%ED%95%9C-%EC%9D%B4%EB%A6%84%EC%9D%80-%ED%94%BC%ED%95%98%EB%9D%BC\" aria-label=\"기발한 이름은 피하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기발한 이름은 피하라</h3>\n<p>재미난 이름보다 명료한 이름을 선택하라.<br>\n농담은 피하고, 의도를 분명하고 솔직하게 표현하자.</p>\n<h3 id=\"한-개념에-한-단어를-사용하라\" style=\"position:relative;\"><a href=\"#%ED%95%9C-%EA%B0%9C%EB%85%90%EC%97%90-%ED%95%9C-%EB%8B%A8%EC%96%B4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"한 개념에 한 단어를 사용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한 개념에 한 단어를 사용하라</h3>\n<p>똑같은 매서드를 클래스마다 fetch, retrieve, get으로 제각각 부르면 혼란스럽다.<br>\n근본적으로 다르다고 생각되지 않는 것들을 통일하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"일관성 있는 어휘는 코드를 사용할 프로그래머가 반갑게 여길 선물이다.\"</code></pre></div>\n<h3 id=\"말장난을-하지-마라\" style=\"position:relative;\"><a href=\"#%EB%A7%90%EC%9E%A5%EB%82%9C%EC%9D%84-%ED%95%98%EC%A7%80-%EB%A7%88%EB%9D%BC\" aria-label=\"말장난을 하지 마라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>말장난을 하지 마라</h3>\n<p>기존 값 두 개를 더하는 개념으로 add를 사용하고 있었다가, 하나를 추가하는 개념으로 add를 사용한다면 이는 말장난이다.<br>\ninset나 append라는 이름이 적당하다.</p>\n<h3 id=\"해법-영역에서-가져온-이름을-사용하라\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EB%B2%95-%EC%98%81%EC%97%AD%EC%97%90%EC%84%9C-%EA%B0%80%EC%A0%B8%EC%98%A8-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"해법 영역에서 가져온 이름을 사용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해법 영역에서 가져온 이름을 사용하라</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">프로그래머에게 익숙한 기술 개념은 아주 많다.  \r\n기술 개념에는 기술 이름이 가장 적합한 선택이다.  </code></pre></div>\n<h3 id=\"문제-영역에서-가져온-이름을-사용하라\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%98%81%EC%97%AD%EC%97%90%EC%84%9C-%EA%B0%80%EC%A0%B8%EC%98%A8-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\" aria-label=\"문제 영역에서 가져온 이름을 사용하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 영역에서 가져온 이름을 사용하라</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">적절한 '프로그래머 용어'가 없다면 문제 영역에서 이름을 가져온다.</code></pre></div>\n<h3 id=\"의미-있는-맥락을-추가하라\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EB%AF%B8-%EC%9E%88%EB%8A%94-%EB%A7%A5%EB%9D%BD%EC%9D%84-%EC%B6%94%EA%B0%80%ED%95%98%EB%9D%BC\" aria-label=\"의미 있는 맥락을 추가하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의미 있는 맥락을 추가하라</h3>\n<p>‘state’ 하나만 보면 이게 뭔지 감이 오는가?<br>\n주소 일부라는 사실을 알기 위해선 ‘addrState’라는 변수를 사용하는게 적당하다.<br>\n이런 의미에서 접두어와 같은 의미있는 맥락을 추가하는 것이 좋다.</p>\n<h3 id=\"불필요한-맥락을-없애라\" style=\"position:relative;\"><a href=\"#%EB%B6%88%ED%95%84%EC%9A%94%ED%95%9C-%EB%A7%A5%EB%9D%BD%EC%9D%84-%EC%97%86%EC%95%A0%EB%9D%BC\" aria-label=\"불필요한 맥락을 없애라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>불필요한 맥락을 없애라</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">accountAddress와 customerAddress는 Address 클래스 인스턴스로는 좋은 이름이나 \r\n클래스 이름으로는 적합하지 못하다.</code></pre></div>\n<h3 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h3>\n<p>학습한 규칙 몇 개를 적용해 코드 가독성이 높아지는지 살펴야겠다.<br>\n다른 사람이 짠 코드를 손본다면 리팩터링 도구를 사용해 문제 해결 목적으로 이름을 개선하라.</p>\n<p><del>우리 회사는 인텔리제이 못 쓰게 하는데…</del></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#intro\">Intro</a></p>\n<ul>\n<li><a href=\"#%EC%9D%98%EB%8F%84%EB%A5%BC-%EB%B6%84%EB%AA%85%ED%9E%88-%EB%B0%9D%ED%98%80%EB%9D%BC\">의도를 분명히 밝혀라</a></li>\n<li><a href=\"#%EA%B7%B8%EB%A6%87%EB%90%9C-%EC%A0%95%EB%B3%B4%EB%A5%BC-%ED%94%BC%ED%95%98%EB%9D%BC\">그릇된 정보를 피하라</a></li>\n<li><a href=\"#%EC%9D%98%EB%AF%B8-%EC%9E%88%EA%B2%8C-%EA%B5%AC%EB%B6%84%ED%95%98%EB%9D%BC\">의미 있게 구분하라</a></li>\n<li><a href=\"#%EB%B0%9C%EC%9D%8C%ED%95%98%EA%B8%B0-%EC%89%AC%EC%9A%B4-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\">발음하기 쉬운 이름을 사용하라</a></li>\n<li><a href=\"#%EA%B2%80%EC%83%89%ED%95%98%EA%B8%B0-%EC%89%AC%EC%9A%B4-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\">검색하기 쉬운 이름을 사용하라</a></li>\n<li><a href=\"#%EC%9D%B8%EC%BD%94%EB%94%A9%EC%9D%84-%ED%94%BC%ED%95%98%EB%9D%BC\">인코딩을 피하라</a></li>\n<li><a href=\"#%EC%9E%90%EC%8B%A0%EC%9D%98-%EA%B8%B0%EC%96%B5%EB%A0%A5%EC%9D%84-%EC%9E%90%EB%9E%91%ED%95%98%EC%A7%80-%EB%A7%88%EB%9D%BC\">자신의 기억력을 자랑하지 마라</a></li>\n<li><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%9D%B4%EB%A6%84\">클래스 이름</a></li>\n<li><a href=\"#%EB%A7%A4%EC%84%9C%EB%93%9C-%EC%9D%B4%EB%A6%84\">매서드 이름</a></li>\n<li><a href=\"#%EA%B8%B0%EB%B0%9C%ED%95%9C-%EC%9D%B4%EB%A6%84%EC%9D%80-%ED%94%BC%ED%95%98%EB%9D%BC\">기발한 이름은 피하라</a></li>\n<li><a href=\"#%ED%95%9C-%EA%B0%9C%EB%85%90%EC%97%90-%ED%95%9C-%EB%8B%A8%EC%96%B4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\">한 개념에 한 단어를 사용하라</a></li>\n<li><a href=\"#%EB%A7%90%EC%9E%A5%EB%82%9C%EC%9D%84-%ED%95%98%EC%A7%80-%EB%A7%88%EB%9D%BC\">말장난을 하지 마라</a></li>\n<li><a href=\"#%ED%95%B4%EB%B2%95-%EC%98%81%EC%97%AD%EC%97%90%EC%84%9C-%EA%B0%80%EC%A0%B8%EC%98%A8-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\">해법 영역에서 가져온 이름을 사용하라</a></li>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%98%81%EC%97%AD%EC%97%90%EC%84%9C-%EA%B0%80%EC%A0%B8%EC%98%A8-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%9D%BC\">문제 영역에서 가져온 이름을 사용하라</a></li>\n<li><a href=\"#%EC%9D%98%EB%AF%B8-%EC%9E%88%EB%8A%94-%EB%A7%A5%EB%9D%BD%EC%9D%84-%EC%B6%94%EA%B0%80%ED%95%98%EB%9D%BC\">의미 있는 맥락을 추가하라</a></li>\n<li><a href=\"#%EB%B6%88%ED%95%84%EC%9A%94%ED%95%9C-%EB%A7%A5%EB%9D%BD%EC%9D%84-%EC%97%86%EC%95%A0%EB%9D%BC\">불필요한 맥락을 없애라</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\">마치면서</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 28, 2024","title":"2장 의미있는 이름","categories":"Clean_Code","author":"신승민","emoji":"🥭"},"fields":{"slug":"/[Clean Code] 2장 의미있는 이름/"}},"site":{"siteMetadata":{"siteUrl":"https://maljaaa.github.io","comments":{"utterances":{"repo":"maljaaa/maljaaa.github.io"}}}}},"pageContext":{"slug":"/[Clean Code] 1장 깨끗한 코드/","nextSlug":"/Database의 책임/","prevSlug":"/[Clean Code] 2장 의미있는 이름/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}